<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Webnovel">
	<!-- 웹소설 -->
	<resultMap type="com.kh.cc.webnovel.model.vo.Webnovel" id="webnovelResultSet">
		<id property="wid" column="WID"/>
		<result property="userId" column="USER_ID"/>
		<result property="wuploadDate" column="WUPLOAD_DATE"/>
		<result property="wTitle" column="WTITLE"/>
		<result property="wIntro" column="WINTRO"/>
		<result property="vCount" column="VCOUNT"/>
		<result property="wCycle" column="WCYCLE"/>
		<result property="gradeType" column="GRADE_TYPE"/>
		<result property="workType" column="WORK_TYPE"/>
		<result property="workStatus" column="WORK_STATUS"/>
		<result property="workDate" column="WORK_DATE"/>
		<result property="ageGrade" column="AGE_GRADE"/>
		<result property="genre" column="GENRE"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="fid" column="FID"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="attentionId" column="ATTENTION_ID"/>
		<result property="spAvg" column="SPAVG"/>
		<result property="genreExplain" column="GENRE_EXPLAIN"/>
	</resultMap>
	<!-- 메인 썸네일 -->
	<resultMap type="com.kh.cc.webnovel.model.vo.WebnovelPhoto" id="webnovelPhotoResultSet">
		<id property="fid" column="FID"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="uploadDate" column="UPLOAD_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="aCategory" column="ATTACHMENT_CATEGORY"/>
		<result property="rid" column="RID"/>
		<result property="illCode" column="ILL_CODE"/>
		<result property="spCode" column="SP_CODE"/>
		<result property="wid" column="WID"/>
		<result property="userId" column="USER_ID"/>
	</resultMap>
	<!-- 웹소설 회차-->
	<resultMap type="com.kh.cc.webnovel.model.vo.WebnovelRound" id="webnovelRoundResultSet">
		<id property="rid" column="RID"/>
		<result property="rTitle" column="RTITLE"/>
		<result property="vCount" column="VCOUNT"/>
		<result property="ruploadDate" column="RUPLOAD_DATE"/>
		<result property="approvalCode" column="APPROVAL_CODE"/>
		<result property="wid" column="WID"/>
		<result property="rContent" column="RCONTENT"/>
		<result property="wrComment" column="WR_COMMENT"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="attentionId" column="ATTENTION_ID"/>
		<result property="gradeType" column="GRADE_TYPE"/>
		<result property="cRid" column="CRID"/>
		<result property="mno" column="MNO"/>
	</resultMap>
	<!-- 웹소설 관심 등록-->
	<resultMap type="com.kh.cc.webnovel.model.vo.WebnovelAttention" id="WebnovelAttentionResultSet">
		<id property="attentionId" column="ATTENTION_ID"/>
		<result property="wid" column="WID"/>
		<result property="userId" column="USER_ID"/>
	</resultMap>
	<!-- 웹소설 별점-->
	<resultMap type="com.kh.cc.webnovel.model.vo.WebnovelStarPoint" id="WebnovelStarPointResultSet">
		<id property="starpId" column="STARP_ID"/>
		<result property="starPoint" column="STAR_POINT"/>
		<result property="rid" column="RID"/>
		<result property="userId" column="USER_ID"/>
	</resultMap>
	<!-- 웹소설 댓글-->
	<resultMap type="com.kh.cc.webnovel.model.vo.WebnovelReply" id="WebnovelReplyResultSet">
		<id property="replyId" column="REPLY_ID"/>
		<result property="replyDate" column="REPLY_DATE"/>
		<result property="replyContent" column="REPLY_CONTENT"/>
		<result property="rid" column="RID"/>
		<result property="bid" column="B_ID"/>
		<result property="userId" column="USER_ID"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="commentId" column="COMMENT_ID"/>
	</resultMap>
	<!-- 웹소설 신고 -->
	<resultMap type="com.kh.cc.webnovel.model.vo.WebnovelReport" id="WebnovelReportResultSet">
		<id property="reportId" column="REPORT_ID"/>
		<result property="reportType" column="REPORT_TYPE"/>
		<result property="reportDate" column="REPROT_DATE"/>
		<result property="reportReason" column="REPORT_REASON"/>
		<result property="reportCategory" column="REPORT_CATEGORY"/>
		<result property="status" column="STATUS"/>
		<result property="userId" column="USER_ID"/>
		<result property="wid" column="WID"/>
		<result property="rid" column="RID"/>
		<result property="commentId" column="COMMENT_ID"/>
		<result property="bid" column="B_ID"/>
	</resultMap>
	
	<resultMap type="com.kh.cc.member.model.vo.Member" id="memberResultSet">
		<id property="mno" column="MNO"/>
		<result property="userId" column="USER_ID"/>
		<result property="userPwd" column="USER_PWD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="memberType" column="MEMBER_TYPE"/>
		<result property="intro" column="INTRO"/>
		<result property="wallet" column="WALLET"/>
		<result property="birthday" column="BIRTHDAY"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="wCount" column="WCOUNT"/>
		<result property="status" column="STATUS"/>
		<result property="joinDate" column="JOIN_DATE"/>
	</resultMap>
	<!-- 코인 -->
	<resultMap type="com.kh.cc.member.model.vo.Member" id="coinResultSet">
		<id property="coinCode" column="COIN_CODE"/>
		<result property="mno" column="MNO"/>
		<result property="coinCategory" column="COIN_CATEGORY"/>
		<result property="coinCount" column="COIN_COUNT"/>
		<result property="rid" column="RID"/>
		<result property="cDate" column="C_DATE"/>
	</resultMap>
	<!-- 재로그인용 -->
	<select id="selectMember" resultMap="memberResultSet" parameterType="Member">
		SELECT * 
		FROM MEMBER 
		WHERE USER_ID = #{userId} 
		AND USER_PWD = #{userPwd} 
		AND STATUS = 'Y'
	</select>
	<!-- 작품 등록 메소드 -->
	<insert id="insertWebnovel" parameterType="Webnovel">
		INSERT INTO WORK 
		VALUES (WID_SEQ.NEXTVAL, #{userId}, SYSDATE, #{wTitle}, #{wIntro}, 0, #{wCycle}, 1, 'WN', DEFAULT, null, #{ageGrade}, #{genre})
	</insert>
	<!-- 작품 메인 사진 등록 메소드 -->
	<insert id="insertWnPhoto" parameterType="WebnovelPhoto">
		INSERT INTO ATTACHMENT 
		VALUES (ATC_SEQ.NEXTVAL, #{originName}, #{changeName}, #{filePath}, SYSDATE, 'Y', 'ma', 0, null, null, WID_SEQ.CURRVAL, #{userId}) 
	</insert>
	<!-- 메인썸네일 리스트 카운트 -->
	<select id="selectListCount" parameterType="Webnovel" resultType="_int">
		SELECT COUNT(*)
		FROM WORK W
		JOIN ATTACHMENT A ON(W.WID = A.WID)
		JOIN MEMBER M ON(W.USER_ID = M.USER_ID)
		WHERE W.USER_ID = #{userId}
		AND A.ATTACHMENT_CATEGORY = 'ma'
		AND W.WORK_TYPE = 'WN'
		AND W.GRADE_TYPE = #{gradeType}
		ORDER BY WUPLOAD_DATE DESC
	</select>
	<!-- 메인썸네일 리스트 조회 -->
	<select id="selectWnList" parameterType="Webnovel" resultMap="webnovelResultSet">
		SELECT *
		FROM WORK W
		JOIN ATTACHMENT A ON(W.WID = A.WID)
		JOIN MEMBER M ON(W.USER_ID = M.USER_ID)
		WHERE W.USER_ID = #{userId}
		AND A.ATTACHMENT_CATEGORY = 'ma'
		AND W.WORK_TYPE = 'WN'
		AND W.GRADE_TYPE = #{gradeType}
		ORDER BY WUPLOAD_DATE DESC
	</select>
	<!-- 작품 , 사진 정보-->
	<select id="selectWnOne" parameterType="Webnovel" resultMap="webnovelResultSet">
		SELECT *
		FROM WORK W
		JOIN ATTACHMENT A ON(W.WID = A.WID)
		WHERE A.WID = #{wid}
		AND W.GRADE_TYPE = #{gradeType}
		AND A.ATTACHMENT_CATEGORY = 'ma' 
	</select>
	<!-- 작품 메인 수정 -->
	<update id="updateWebnovel" parameterType="Webnovel">
		UPDATE WORK
		SET WTITLE = #{wTitle},
		    WINTRO = #{wIntro},
		    WCYCLE = #{wCycle},
		    GENRE = #{genre}
		WHERE WID = #{wid}
	</update>
	<!-- 작품 메인 사진 수정 -->
	<update id="updateWnPhoto" parameterType="WebnovelPhoto">
		UPDATE ATTACHMENT
		SET ORIGIN_NAME = #{originName},
		    CHANGE_NAME = #{changeName}
		WHERE FID = #{fid}
	</update>
	<!-- 작품 회차 등록 -->
	<insert id="insertWnRound" parameterType="WebnovelRound">
		INSERT INTO WORK_ROUND VALUES (WRID_SEQ.NEXTVAL, #{rTitle}, 0, SYSDATE, 1, #{wid}, #{wrComment}, #{rContent})
	</insert>
	<!-- 작품 회차 사진 등록 메소드 -->
	<insert id="insertWnrPhoto" parameterType="WebnovelPhoto">
		INSERT INTO ATTACHMENT 
		VALUES (ATC_SEQ.NEXTVAL, #{originName}, #{changeName}, #{filePath}, SYSDATE, 'Y', 'sub', WRID_SEQ.CURRVAL, null, null, #{wid}, #{userId}) 
	</insert>
	<!-- 작품 완료 상태 업데이트 -->
	<update id="updateWorkStatus" parameterType="Webnovel">
		UPDATE WORK
		SET WORK_STATUS = #{workStatus}
		WHERE WID = #{wid}
	</update>
	<!-- 회차 목록 카운트 -->
	<select id="selectWnrListCount" parameterType="WebnovelRound" resultType="_int">
		SELECT COUNT(*)
		FROM WORK_ROUND
		WHERE WID = #{wid}
	</select>
	<!-- 회차 목록 리스트 -->
	<select id="selectWnRoundList" parameterType="WebnovelRound" resultMap="webnovelRoundResultSet">
		SELECT WR.WID, WR.RID, WR.RTITLE, WR.VCOUNT, WR.RUPLOAD_DATE, WR.APPROVAL_CODE, WR.WID, WR.RCONTENT, WR.WR_COMMENT, A.CHANGE_NAME, W.GRADE_TYPE, C.RID AS CRID, C.MNO                                                                                                                                                                      
		FROM WORK_ROUND WR
		LEFT JOIN COIN C ON(WR.RID = C.RID)
		LEFT JOIN WORK W ON(W.WID = WR.WID)
		LEFT JOIN MEMBER M ON(M.MNO = C.MNO)
		LEFT JOIN ATTACHMENT A ON(A.RID = WR.RID)
		WHERE A.ATTACHMENT_CATEGORY = 'sub'
		AND WR.WID = #{wid}
		AND W.GRADE_TYPE = #{gradeType}
		AND C.MNO IS NULL OR( C.MNO = #{mno})
		ORDER BY WR.RUPLOAD_DATE DESC
	</select>
	<select id="selectWnRoundListAll" parameterType="WebnovelRound" resultMap="webnovelRoundResultSet">
		SELECT WR.WID, WR.RID, WR.RTITLE, WR.VCOUNT, WR.RUPLOAD_DATE, WR.APPROVAL_CODE, WR.WID, WR.RCONTENT, WR.WR_COMMENT, A.CHANGE_NAME, W.GRADE_TYPE                                                                                                                                                       
		FROM WORK_ROUND WR
		LEFT JOIN WORK W ON(W.WID = WR.WID)
		LEFT JOIN ATTACHMENT A ON(A.RID = WR.RID)
		WHERE A.ATTACHMENT_CATEGORY = 'sub'
		AND WR.WID = #{wid}
		AND W.GRADE_TYPE = #{gradeType}
		ORDER BY WR.RUPLOAD_DATE DESC
	</select>
	<!-- 회차, 사진 정보 -->
	<select id="selectWnrOne" parameterType="_int" resultMap="webnovelRoundResultSet">
		SELECT * 
		FROM WORK_ROUND WR
		JOIN ATTACHMENT A ON(WR.RID = A.RID)
		WHERE A.RID = #{rid}
	</select>
	<!-- 회차 정보 수정 -->
	<update id="updateWnRound" parameterType="WebnovelRound">
		UPDATE WORK_ROUND
		SET RTITLE = #{rTitle},
		    WR_COMMENT = #{wrComment},
		    RCONTENT = #{rContent}
		WHERE RID = #{rid}
	</update>
	<!-- 웹소설 삭제 -->
	<delete id="deleteWebnovel" parameterType="Webnovel">
		DELETE FROM WORK 
		WHERE WID = #{wid}
		AND GRADE_TYPE = #{gradeType}
	</delete>
	<!-- 웹소설 회차 삭제 -->
	<delete id="deleteWnRound" parameterType="Webnovel">
        DELETE FROM WORK_ROUND 
        WHERE WID = #{wid}
	</delete>
	<!-- 웹소설 메인, 서브 사진 삭제 -->
	<delete id="deleteWebnovelPhoto" parameterType="Webnovel">
        DELETE FROM ATTACHMENT 
        WHERE WID = #{wid}
	</delete>
	<!-- 웹소설 회차 한개 삭제 -->
	<delete id="deleteWnRoundOne" parameterType="WebnovelRound">
        DELETE FROM WORK_ROUND 
        WHERE RID = #{rid}
	</delete>
	<!-- 웹소설 회차 사진 한개 삭제 -->
	<delete id="deleteWnrPhoto" parameterType="WebnovelRound">
        DELETE FROM ATTACHMENT 
        WHERE RID = #{rid}
	</delete>
	<!-- 웹소설 도전/프리미엄 장르 목록 카운트 -->
	<select id="webNovelGenreCount" parameterType="Webnovel" resultType="_int">
		SELECT COUNT(*)
		FROM WORK W
		JOIN ATTACHMENT A ON(A.WID = W.WID)
		JOIN MEMBER M ON(M.USER_ID = W.USER_ID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND W.GENRE = #{genre}
		AND W.WORK_STATUS = 'RUN'
		AND WORK_TYPE = 'WN'
		AND A.ATTACHMENT_CATEGORY = 'ma'
	</select>
	<!-- 웹소설 도전/프리미엄 장르 목록 리스트 -->
	<select id="webNovelGenreList" parameterType="Webnovel" resultMap="webnovelResultSet">
		SELECT W.WID, M.NICKNAME, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE,  W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN, TRUNC(AVG(STAR_POINT), 2) AS SPAVG, COUNT(DISTINCT ATTENTION_ID) AS ACOUNT
		FROM WORK W
		LEFT JOIN MEMBER M ON(M.USER_ID = W.USER_ID)
		LEFT JOIN ATTACHMENT ATC ON(W.WID = ATC.WID)
		LEFT JOIN GENRE G ON(G.GENRE_CODE = W.GENRE)
		LEFT JOIN WORK_ROUND WR ON(W.WID = WR.WID)
		LEFT JOIN STARP SP ON (WR.RID = SP.RID)
		LEFT JOIN ATTENTION AT ON(AT.WID = W.WID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND W.GENRE = #{genre}
		AND W.WORK_STATUS = 'RUN'
		AND ATC.ATTACHMENT_CATEGORY = 'ma'
		GROUP BY W.WID,  M.NICKNAME, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE, W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN
		ORDER BY W.VCOUNT DESC, SPAVG DESC, ACOUNT DESC
	</select>
	<!-- 웹소설 도전 완결 목록 카운트 -->
	<select id="webnovelCompCount" parameterType="Webnovel" resultType="_int">
		SELECT COUNT(*)
		FROM WORK W
		JOIN ATTACHMENT A ON(A.WID = W.WID)
		JOIN MEMBER M ON(M.USER_ID = W.USER_ID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND W.WORK_STATUS = 'COMP'
		AND WORK_TYPE = 'WN'
		AND A.ATTACHMENT_CATEGORY = 'ma'
	</select>
	<!-- 웹소설 도전 완결 목록 리스트 -->
	<select id="webnovelCompList" parameterType="Webnovel" resultMap="webnovelResultSet">
		SELECT *
		FROM WORK W
		JOIN ATTACHMENT A ON(A.WID = W.WID)
		JOIN MEMBER M ON(M.USER_ID = W.USER_ID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND W.WORK_STATUS = 'COMP'
		AND WORK_TYPE = 'WN'
		AND A.ATTACHMENT_CATEGORY = 'ma'
		ORDER BY WUPLOAD_DATE DESC
	</select>
	<!-- 조회수 증가 메소드 -->
	<update id="updateCount" parameterType="WebnovelRound">
		UPDATE WORK 
		SET VCOUNT=(SELECT VCOUNT FROM WORK WHERE WID=#{wid}) +1 
		WHERE WID=#{wid}
	</update>
	<!-- 관심 등록 메소드 -->
	<insert id="insertAttention" parameterType="WebnovelAttention">
		INSERT INTO ATTENTION VALUES (ATT_SEQ.NEXTVAL, #{wid}, #{userId})
	</insert>
	<!-- 관심 등록 정보 메소드 -->
	<select id="selectAttention" parameterType="WebnovelAttention" resultMap="WebnovelAttentionResultSet">
		SELECT * 
		FROM ATTENTION
		WHERE WID = #{wid}
		AND USER_ID = #{userId}
	</select>
	<!-- 별점주기 메소드 -->
	<insert id="insertStarPoint" parameterType="WebnovelStarPoint">
		INSERT INTO STARP VALUES (STP_SEQ.NEXTVAL, #{starPoint}, #{rid}, #{userId})
	</insert>
	<!-- 별점 정보 -->
	<select id="selectWnSpOne" parameterType="WebnovelStarPoint" resultMap="WebnovelStarPointResultSet">
		SELECT * 
		FROM STARP
		WHERE RID = #{rid}
		AND USER_ID = #{userId}
	</select>
	<!-- 회차 별점 평균 -->
	<select id="selectWnrStarPointAvg" parameterType="int" resultType="_double">
		SELECT TRUNC(AVG(STAR_POINT), 2)
		FROM STARP
		WHERE RID = #{rid}
	</select>
	<!-- 회차 별점 평가인원 수 -->
	<select id="selectstarPointCount" parameterType="int" resultType="_int">
		SELECT COUNT(*)
		FROM STARP
		WHERE RID = #{rid}
	</select>
	<!-- 작품 별점 평균 -->
	<select id="selectAllWnrStarPointAvg" parameterType="int" resultType="_double">
		SELECT TRUNC(AVG(STAR_POINT), 2)
		FROM STARP P 
		JOIN WORK_ROUND WR ON(WR.RID = P.RID)
		JOIN WORK W ON(WR.WID = W.WID)
		WHERE W.WID = #{wid}
	</select>
	<!-- 작품 전체 평가인원 수 -->
	<select id="selectAllStarPointCount" parameterType="int" resultType="_int">
		SELECT COUNT(*)
		FROM STARP P 
		JOIN WORK_ROUND WR ON(WR.RID = P.RID)
		JOIN WORK W ON(WR.WID = W.WID)
		WHERE W.WID = #{wid}
	</select>
	<!-- 웹소설 도전 완결 목록 카운트 -->
	<select id="selectBestWnListCount" parameterType="int" resultType="_int">
		SELECT COUNT(DISTINCT WID)
		FROM WORK W
		LEFT JOIN WORK_ROUND WR ON(W.WID = WR.WID)
		LEFT JOIN STARP SP ON (WR.RID = SP.RID)
		LEFT JOIN ATTENTION AT ON(AT.WID = W.WID)
		WHERE W.GRADE_TYPE = #{gradeType}
	</select>
	<!-- 웹소설 도전 완결 목록 리스트 -->
	<select id="selectBestWnList" parameterType="int" resultMap="webnovelResultSet">
		SELECT W.WID, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE,  W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN, TRUNC(AVG(STAR_POINT), 2) AS SPAVG, COUNT(DISTINCT ATTENTION_ID) AS ACOUNT
		FROM WORK W
		LEFT JOIN ATTACHMENT ATC ON(W.WID = ATC.WID)
		LEFT JOIN GENRE G ON(G.GENRE_CODE = W.GENRE)
		LEFT JOIN WORK_ROUND WR ON(W.WID = WR.WID)
		LEFT JOIN STARP SP ON (WR.RID = SP.RID)
		LEFT JOIN ATTENTION AT ON(AT.WID = W.WID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND ATC.ATTACHMENT_CATEGORY = 'ma'
		GROUP BY W.WID, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE, W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN
		ORDER BY W.VCOUNT DESC, SPAVG DESC, ACOUNT DESC
	</select>
	<select id="selectRecommendGenreList" parameterType="Webnovel" resultMap="webnovelResultSet">
		SELECT W.WID, M.NICKNAME, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE,  W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN, TRUNC(AVG(STAR_POINT), 2) AS SPAVG, COUNT(DISTINCT ATTENTION_ID) AS ACOUNT
		FROM WORK W
		LEFT JOIN MEMBER M ON(M.USER_ID = W.USER_ID)
		LEFT JOIN ATTACHMENT ATC ON(W.WID = ATC.WID)
		LEFT JOIN GENRE G ON(G.GENRE_CODE = W.GENRE)
		LEFT JOIN WORK_ROUND WR ON(W.WID = WR.WID)
		LEFT JOIN STARP SP ON (WR.RID = SP.RID)
		LEFT JOIN ATTENTION AT ON(AT.WID = W.WID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND W.GENRE = #{genre}
		AND W.WORK_STATUS = 'RUN'
		AND ATC.ATTACHMENT_CATEGORY = 'ma'
		GROUP BY W.WID,  M.NICKNAME, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE, W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN
		ORDER BY W.VCOUNT DESC, SPAVG DESC, ACOUNT DESC
	</select>
	<select id="selectNewRecommendList" parameterType="Webnovel" resultMap="webnovelResultSet">
		SELECT W.WID, M.NICKNAME, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE,  W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN, TRUNC(AVG(STAR_POINT), 2) AS SPAVG, COUNT(DISTINCT ATTENTION_ID) AS ACOUNT
		FROM WORK W
		LEFT JOIN MEMBER M ON(M.USER_ID = W.USER_ID)
		LEFT JOIN ATTACHMENT ATC ON(W.WID = ATC.WID)
		LEFT JOIN GENRE G ON(G.GENRE_CODE = W.GENRE)
		LEFT JOIN WORK_ROUND WR ON(W.WID = WR.WID)
		LEFT JOIN STARP SP ON (WR.RID = SP.RID)
		LEFT JOIN ATTENTION AT ON(AT.WID = W.WID)
		WHERE W.GRADE_TYPE = #{gradeType}
		AND W.WORK_STATUS = 'RUN'
		AND ATC.ATTACHMENT_CATEGORY = 'ma'
		GROUP BY W.WID,  M.NICKNAME, W.USER_ID, W.WUPLOAD_DATE, W.WTITLE, W.WINTRO, W.WCYCLE, W.GRADE_TYPE, W.WORK_TYPE, W.WORK_STATUS, W.WORK_DATE, W.AGE_GRADE, W.GENRE, W.VCOUNT, ATC.CHANGE_NAME, G.GENRE_EXPLAIN
		ORDER BY w.WUPLOAD_DATE DESC
	</select>
	<!-- 댓글 등록 -->
	<insert id="insertWebnovelReply" parameterType="WebnovelReply">
		INSERT INTO REPLY 
		VALUES (REID_SEQ.NEXTVAL, SYSDATE, #{replyContent}, #{rid}, null, #{userId})
	</insert>
	<!-- 댓글 리스트 카운트 -->
	<select id="selectWebnovelReplyCount" parameterType="int" resultType="_int">
		SELECT COUNT(*)
		FROM REPLY R
		JOIN MEMBER M ON(R.USER_ID = M.USER_ID)
		WHERE R.RID = #{rid}
		ORDER BY R.REPLY_DATE DESC 
	</select>
	<!-- 댓글 리스트 -->
	<select id="selectWebnovelReplyList" parameterType="WebnovelReply" resultMap="WebnovelReplyResultSet">
		SELECT *
		FROM REPLY R
		LEFT JOIN MEMBER M ON(R.USER_ID = M.USER_ID)
		LEFT JOIN REPORT RP ON(R.REPLY_ID = RP.COMMENT_ID)
		WHERE R.RID = #{rid}
		ORDER BY R.REPLY_DATE DESC
	</select>
	<!-- 신고 등록 -->
	<insert id="insertReport" parameterType="WebnovelReport">
		INSERT INTO REPORT
		VALUES (RPID_SEQ.NEXTVAL, #{reportType}, SYSDATE, #{reportReason}, #{reportCategory}, 'WAIT', #{userId}, #{wid}, #{rid}, #{commentId}, #{bid})
	</insert>
	<!-- 회차 신고 로그인/비로그인, 등록인/미등록인 구분 -->
	<select id="selectwReportOne" parameterType="WebnovelReport" resultMap="WebnovelReportResultSet">
		SELECT * 
		FROM REPORT
		WHERE RID = #{rid}
		AND USER_ID = #{userId}
	</select>
	<!-- 작품 신고 로그인/비로그인, 등록인/미등록인 구분 -->
	<select id="selectWorkReportOne" parameterType="WebnovelReport" resultMap="WebnovelReportResultSet">
		SELECT * 
		FROM REPORT
		WHERE WID = #{wid}
		AND USER_ID = #{userId}
	</select>
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="WebnovelReply">
		DELETE FROM REPLY 
		WHERE REPLY_ID = #{replyId}
	</delete>
	<!-- 돈업글 -->
	<update id="updatePayWallet" parameterType="_int">
		UPDATE MEMBER 
		SET WALLET=(SELECT WALLET FROM MEMBER WHERE MNO=#{mno}) -2 
		WHERE MNO=#{mno}
	</update>
	<insert id="insertCoin" parameterType="WebnovelCoin">
		INSERT INTO COIN
		VALUES (COID_SEQ.NEXTVAL, #{mno}, '1', 2, #{rid}, SYSDATE)
	</insert>
	<select id="selectCheckWnr" parameterType="WebnovelRound" resultMap="webnovelRoundResultSet">
		SELECT WR.RID, C.RID AS CRID, C.MNO
		FROM WORK_ROUND WR
		JOIN COIN C ON(WR.RID = C.RID)
		WHERE C.MNO = #{mno}
		AND WR.RID = #{rid}
	</select>
	<select id="selectCheckwRound" parameterType="WebnovelRound" resultType="_int">
		SELECT COUNT(*)
		FROM COIN C
		JOIN MEMBER M ON(C.MNO = M.MNO)
		WHERE C.MNO = #{mno}
	</select>
</mapper>















